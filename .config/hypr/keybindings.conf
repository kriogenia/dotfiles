# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                         Keybinds                            ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

# example binds, see https://wiki.hyprland.org/configuring/binds/ for more

# Grouping of binds for easier management
#  $d=[Group Name|Subgroup Name1|Subgroup Name2|...]
# '$d' is a variable that is used to group binds together (or use another variable)
# This is only for organization purposes and is not a defined hyprland variable
# What we did here is to modify the Description of the binds to include the group name
# The $d will be parsed as a separate key to be use for a GUI or something pretty
# [Main|Subgroup1|Subgroup2|...]
# Main - The main groupname
# Subgroup1.. - The subgroup names can be use to avoid repeating the same description


# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                    Window Management                        ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

$section=Window Management

$d=[$section]
bindd = $mainMod, Q,      $d Close focused window,  killactive
bindd = Alt, F4,          $d Close focused window,  exec, hyprctl dispatch killactive ""
bindd = $mainMod, Delete, $d Kill hyprland session, exit
bindd = $mainMod, W,      $d Toggle floating,       togglefloating
bindd = Shift, F11,       $d Toggle fullscreen,     fullscreen
bindd = $mainMod, J,      $d Toggle split,          togglesplit
bindd = $mainMod, P,      $d Toogle pseudo,         pseudo, # dwindle
# bindd = $mainMod, Y, $d Pin current window (shows on all workspaces), pin, 

$d=[$section|Grouping]
bindd = $mainMod, G,          $d Toggle group,                    togglegroup
bindd = $mainMod Control, H,  $d Change active group backwards,   changegroupactive, b
bindd = $mainMod Control, L,  $d Change active group forwards,    changegroupactive, f

$d=[$section|Change focus]
bindd = $mainMod, Left,           $d Focus left,            movefocus, l
bindd = $mainMod, Right,          $d Focus right,           movefocus, r
bindd = $mainMod, Up,             $d Focus up,              movefocus, u
bindd = $mainMod, Down,           $d Focus down,            movefocus, d
bindd = ALT, Tab,                 $d Cycle focus,           cyclenext

$d=[$section|Resize Active Window]
bindde = $mainMod Shift, Right,   $d Resize window right,   resizeactive, 30 0
bindde = $mainMod Shift, Left,    $d Resize window left,    resizeactive, -30 0
bindde = $mainMod Shift, Up,      $d Resize window up,      resizeactive, 0 -30
bindde = $mainMod Shift, Down,    $d Resize  window down,   resizeactive, 0 30

# Move active window around current workspace with mainMod + Shift + Control [←→↑↓]
$d=[$section|Move active window across workspace]
$moveactivewindow=grep -q "true" <<< $(hyprctl activewindow -j | jq -r .floating) && hyprctl dispatch moveactive
bindde = $mainMod Shift Control, left,    $d Move active window to the left,    exec, $moveactivewindow -30 0 || hyprctl dispatch movewindow l
bindde = $mainMod Shift Control, right,   $d Move active window to the right,   exec, $moveactivewindow 30 0 || hyprctl dispatch movewindow r
bindde = $mainMod Shift Control, up,      $d Move active window up,             exec, $moveactivewindow  0 -30 || hyprctl dispatch movewindow u
bindde = $mainMod Shift Control, down,    $d Move active window down,           exec, $moveactivewindow 0 30 || hyprctl dispatch movewindow d

# Move/Resize focused window
$d=[$section|Move & Resize with mouse]
binddm = $mainMod, mouse:272,   $d Hold to move window, movewindow
binddm = $mainMod, mouse:273,   $d Hold to resize window, resizewindow
binddm = $mainMod, Z,           $d Hold to move window, movewindow
binddm = $mainMod, X,           $d Hold to resize window, resizewindow

# # Activate keyboard window resize mode
# # https://wiki.hyprland.org/Configuring/Binds/#submaps
# $d=[$section|Resize Active Window]
# bindd = $mainMod, R,  $d Activates window resizing mode,    submap, resize
# submap = resize
# bindd = , right,      $d Resize to the right,               resizeactive, 15 0
# bindd = , left,       $d Resize to the left,                resizeactive, -15 0
# bindd = , up,         $d Resize upwards,                    resizeactive, 0 -15
# bindd = , down,       $d Resize downwards,                  resizeactive, 0 15
# bindd = , l,          $d Resize to the right,               resizeactive, 15 0
# bindd = , h,          $d Resize to the left,                resizeactive, -15 0
# bindd = , k,          $d Resize upwards,                    resizeactive, 0 -15
# bindd = , j,          $d Resize downwards,                  resizeactive, 0 15
# bindd = , escape,     $d Ends window resizing mode,         submap, reset
# submap = reset

# TODO: investigate pins and focused windows
# bindd = $mainMod Shift, F, $d toggle pin on focused window, exec, $scrPath/windowpin.sh

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                   Session Management                        ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

$section=Session Management

$d=[$section]
bindd = $mainMod, L,          $d Lock screen,   exec, $lockscreen

# FIXME: not working
# bindd = Control Alt, Delete,  $d logout menu,   exec, $binPath/logout.sh

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                   Desktop Environment                       ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

$section=Desktop Environment

$d=[$section]
bindd = $mainMod, M,        $d Toggle waybar,             exec, killall waybar || waybar
# bindd = $mainMod, U, $d toggle shell visibility , global, quickshell:toggleShell

$d=[$section|Apps]
bindd = $mainMod, T,        $d Terminal emulator,         exec, $terminal
# TODO: check is not opening
bindd = $mainMod, E,        $d File explorer,             exec, $explorer
bindd = $mainMod Shift, E,  $d Visual file explorer,      exec, $altexplorer
bindd = $mainMod, B,        $d Web browser,               exec, $browser
bindd = $mainMod Shift, B,  $d Alternate web browser,     exec, $altbrowser
# TODO: check is not opening
bindd = $mainMod, C,        $d Text editor,               exec, $editor
bindd = $mainMod, S,        $d Screen capture selection,  exec, $screenshot


# TODO: set-up rofi
$d=[$section|Launcher]
$rofi_config=$HOME/.config/rofi/
# $rofi-launch=$scrPath/rofilaunch.sh
# bindd = $mainMod Shift, E, $d file finder , exec, pkill -x rofi || $rofi-launch f
# bindd = $mainMod, slash, $d keybindings hint, exec, pkill -x rofi || $scrPath/keybinds_hint.sh c # launch keybinds hint
# bindd = $mainMod, period, $d glyph picker , exec, pkill -x rofi || $scrPath/glyph-picker.sh # launch glyph picker
# bindd = $mainMod, V, $d clipboard ,  exec, pkill -x rofi || $scrPath/cliphist.sh -c # launch clipboard,
# bindd = $mainMod Shift, V, $d clipboard manager , exec, pkill -x rofi || $scrPath/cliphist.sh # launch clipboard Manager
# bindd = $mainMod Shift, A, $d select rofi launcher , exec, pkill -x rofi || $scrPath/rofiselect.sh # launch select menu
bindd = $mainMod, R,    $d Application finder,  exec, pkill -x rofi || $launcher -show drun
bindd = $mainMod, TAB,  $d Window switcher,     exec, pkill -x rofi || $launcher -show window

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                    Hardware Controls                        ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

$section=Hardware Controls

$d=[$section|Keyboard]
bindd = $mainMod, K,              $d Layout switcher ,    exec, hyprctl switchxkblayout $keyboard next

$d=[$section|Audio]
binddel = , XF86AudioRaiseVolume, $d Toggle mute output,  exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
binddel = , XF86AudioLowerVolume, $d Un/mute microphone,  exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
binddl  = , XF86AudioMute,        $d Decrease volume,     exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
binddl  = , XF86AudioMicMute,     $d Increase volume,     exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

$d=[$section|Media]
binddl = , XF86AudioPlay,         $d Play media,          exec, playerctl play-pause # TODO: check not working
binddl = , XF86AudioPause,        $d Pause media,         exec, playerctl play-pause
binddl = , XF86AudioNext,         $d Next media,          exec, playerctl next
binddl = , XF86AudioPrev,         $d Previous media,      exec, playerctl previous

source = ./keybindings/brightness.conf

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                         Workspaces                          ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

$section=Workspaces

$d=[$section|Navigation]
bindd = $mainMod, 1,              $d Navigate to workspace 1,                   workspace, 1
bindd = $mainMod, 2,              $d Navigate to workspace 2,                   workspace, 2
bindd = $mainMod, 3,              $d Navigate to workspace 3,                   workspace, 3
bindd = $mainMod, 4,              $d Navigate to workspace 4,                   workspace, 4
bindd = $mainMod, 5,              $d Navigate to workspace 5,                   workspace, 5
bindd = $mainMod, 6,              $d Navigate to workspace 6,                   workspace, 6
bindd = $mainMod, 7,              $d Navigate to workspace 7,                   workspace, 7
bindd = $mainMod, 8,              $d Navigate to workspace 8,                   workspace, 8
bindd = $mainMod, 9,              $d Navigate to workspace 9,                   workspace, 9
bindd = $mainMod, 0,              $d Navigate to workspace 10,                  workspace, 10
bindd = $mainMod Control, Down,   $d Navigate to the nearest empty workspace,   workspace, empty
bindd = $mainMod, PERIOD,         $d Next workspace,                            workspace, e+1
bindd = $mainMod, COMMA,          $d Previous workspace,                        workspace, e-1
bindd = $mainMod, mouse_down,     $d Next workspace,                            workspace, e+1
bindd = $mainMod, mouse_up,       $d Previous workspace,                        workspace, e-1
bindd = $mainMod, slash,          $d Switch to the previous workspace,          workspace, previous

$d=[$section|Navigation|Relative workspace]
bindd = $mainMod Control, Right,  $d Change active workspace forwards,          workspace, r+1
bindd = $mainMod Control, Left,   $d Change active workspace backwards,         workspace, r-1

$d=[$section|Move window to workspace]
bindd = $mainMod Shift, 1,            $d Move to workspace 1,                   movetoworkspace, 1
bindd = $mainMod Shift, 2,            $d Move to workspace 2,                   movetoworkspace, 2
bindd = $mainMod Shift, 3,            $d Move to workspace 3,                   movetoworkspace, 3
bindd = $mainMod Shift, 4,            $d Move to workspace 4,                   movetoworkspace, 4
bindd = $mainMod Shift, 5,            $d Move to workspace 5,                   movetoworkspace, 5
bindd = $mainMod Shift, 6,            $d Move to workspace 6,                   movetoworkspace, 6
bindd = $mainMod Shift, 7,            $d Move to workspace 7,                   movetoworkspace, 7
bindd = $mainMod Shift, 8,            $d Move to workspace 8,                   movetoworkspace, 8
bindd = $mainMod Shift, 9,            $d Move to workspace 9,                   movetoworkspace, 9
bindd = $mainMod Shift, 0,            $d Move to workspace 10,                  movetoworkspace, 10
bindd = $mainMod Control+Alt, Right,  $d Move to next relative workspace,       movetoworkspace, r+1
bindd = $mainMod Control+Alt, Left,   $d Move to previous relative workspace,   movetoworkspace, r-1

# TODO: investigate
# # Move/Switch to special workspace (scratchpad)
# $d=[$ws|Navigation|Special workspace]
# bindd = $mainMod Shift, S, $d move to scratchpad  , movetoworkspace, special
# bindd = $mainMod Alt, S, $d move to scratchpad (silent) , movetoworkspacesilent, special
# bindd = $mainMod, S, $d toggle scratchpad ,  togglespecialworkspace

# TODO: investigate
# Example special workspace (scratchpad)
# bind = $mainMod, S, togglespecialworkspace, magic
# bind = $mainMod SHIFT, S, movetoworkspace, special:magic
# Move focused window to a workspace silently

$d=[$ws|Navigation|Move window silently]
bindd = $mainMod Alt, 1,    $d Move to workspace 1  (silent),   movetoworkspacesilent, 1
bindd = $mainMod Alt, 2,    $d Move to workspace 2  (silent),   movetoworkspacesilent, 2
bindd = $mainMod Alt, 3,    $d Move to workspace 3  (silent),   movetoworkspacesilent, 3
bindd = $mainMod Alt, 4,    $d Move to workspace 4  (silent),   movetoworkspacesilent, 4
bindd = $mainMod Alt, 5,    $d Move to workspace 5  (silent),   movetoworkspacesilent, 5
bindd = $mainMod Alt, 6,    $d Move to workspace 6  (silent),   movetoworkspacesilent, 6
bindd = $mainMod Alt, 7,    $d Move to workspace 7  (silent),   movetoworkspacesilent, 7
bindd = $mainMod Alt, 8,    $d Move to workspace 8  (silent),   movetoworkspacesilent, 8
bindd = $mainMod Alt, 9,    $d Move to workspace 9  (silent),   movetoworkspacesilent, 9
bindd = $mainMod Alt, 0,    $d Move to workspace 10 (silent),   movetoworkspacesilent, 10

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                         Miscellanea                         ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

$section=Miscellanea

# TODO: gamemode
# $d=[$ut]
# bindd = $mainMod Alt, G, $d game mode , exec, $scrPath/gamemode.sh # disable hypr effects for gamemode
# bindd = $mainMod Shift, G, $d open game launcher , exec, $scrPath/gamelauncher.sh # run game launcher for steam and lutris

# TODO:evaluate
# $d=[$ut|Screen Capture]
# bindd = $mainMod, P, $d snip screen , exec, $scrPath/screenshot.sh s # partial screenshot capture
# bindd = $mainMod Control, P, $d freeze and snip screen, exec, $scrPath/screenshot.sh sf # partial screenshot capture (frozen screen)
# win+shift+s?


$d=#! unset the group name
